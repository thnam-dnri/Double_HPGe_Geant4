# ==============================================================================
# vis_crosssection.mac - Cross-section Visualization
# ==============================================================================
# This macro provides various cross-sectional views of the detector geometry

# Macro file for the visualization with cross-sections
# Use these open statements to open selected visualization
#
# Use this open statement to create an OpenGL view:
/vis/open OGL 600x600-0+0
#
# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
/vis/viewer/set/autoRefresh false
#
# Draw geometry:
/vis/drawVolume
#
# Specify view angle:
/vis/viewer/set/viewpointVector -1 0 0
/vis/viewer/set/lightsVector -1 0 0
#
# Specify style (surface, wireframe, auxiliary edges,...)
/vis/viewer/set/style surface
/vis/viewer/set/auxiliaryEdge true
/vis/viewer/set/lineSegmentsPerCircle 100
#
# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
/vis/scene/add/trajectories smooth
/vis/modeling/trajectories/create/drawByCharge
/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 2
#
# Draw hits at end of event:
#/vis/scene/add/hits
#
# To draw only gammas:
/vis/filtering/trajectories/create/particleFilter
/vis/filtering/trajectories/particleFilter-0/add gamma
/vis/filtering/trajectories/particleFilter-0/add e-
/vis/filtering/trajectories/particleFilter-0/add e+
#
# Many other options are available with /vis/modeling and /vis/filtering.
# For example, to select colour by particle ID:
/vis/modeling/trajectories/create/drawByParticleID
/vis/modeling/trajectories/drawByParticleID-0/default/setDrawStepPts true
# To select or override default colours (note: e+ is blue by default):
/vis/modeling/trajectories/list
/vis/modeling/trajectories/drawByParticleID-0/set e+ yellow
#
# To superimpose all of the events from a given run:
/vis/scene/endOfEventAction accumulate
#
# Clean view - all decorations removed for clarity
#
# To get nice view
/vis/geometry/set/visibility World 0 false
/vis/geometry/set/visibility Envelope 1 false
/vis/viewer/set/style surface
/vis/viewer/set/hiddenMarker true
/vis/viewer/set/viewpointThetaPhi 120 150

# ==============================================================================
# CROSS-SECTION VIEWS
# ==============================================================================

# Option 1: Cutaway view - cuts away half of geometry
# Enable cutaway mode
/vis/viewer/set/cutawayMode union

# Add a cutaway plane through YZ plane (cuts along X axis)
# This removes everything with x < 0, showing internal structure
/vis/viewer/addCutawayPlane 0 0 0 m 1 0 0

# Alternative cutaway planes (comment/uncomment as needed):
# Cut along Y axis (vertical cut)
#/vis/viewer/addCutawayPlane 0 0 0 m 0 1 0

# Cut along Z axis (horizontal cut through beam)
#/vis/viewer/addCutawayPlane 0 0 0 m 0 0 1

# Multiple cuts at once:
#/vis/viewer/addCutawayPlane 0 0 0 m 1 0 0
#/vis/viewer/addCutawayPlane 0 0 0 m 0 1 0

#
# Re-establish auto refreshing and verbosity:
/vis/viewer/set/autoRefresh true
#
# For file-based drivers, use this to create an empty detector view:
#/vis/viewer/flush
